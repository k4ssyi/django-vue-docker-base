version: "3"
services:
  django:
    build:
      context: ./docker/django
      dockerfile: Dockerfile
    env_file: .env
    command: "/var/www/html/docker/django/start-server.sh"
    volumes:
      - ./application:/var/www/html/application
      - ./docker/django:/var/www/html/docker/django
      - ./docker/etc:/var/www/html/docker/etc
      - ./docker/var/sock:/var/sock
      - ./docker/var/log/gunicorn:/var/log/gunicorn
    ports:
      - "8000:8000"
    environment:
      TZ: ${TZ}
      DJANGO_ENV: ${DJANGO_ENV}
      DATABASE_HOST: db
    tty: true
    depends_on:
      - db

  frontend:
    build:
      context: ./docker/frontend
      dockerfile: Dockerfile
    command: "/var/www/html/docker/frontend/start-watch.sh"
    volumes:
      - ./application/frontend:/var/www/html/application/frontend
      - ./docker/frontend:/var/www/html/docker/frontend
    ports:
      - "3000:3000"
    tty: true

  nginx:
    restart: always
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    ports:
      - "8080:80"
      - "4430:443"
    volumes:
      - ./application/static:/var/www/html/static
      - ./application/media:/var/www/html/media
      - ./docker/var/sock:/var/sock
      - ./docker/var/log/nginx:/var/log/nginx
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - db
      - django

  db:
    build:
      context: ./docker/postgres
      dockerfile: Dockerfile
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      TZ: ${TZ}
    ports:
      - 5432:5432
    volumes:
      - ./docker/postgres/pgsql-data:/var/lib/postgresql/data
